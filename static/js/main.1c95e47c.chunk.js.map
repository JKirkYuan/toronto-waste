{"version":3,"sources":["handleEveryAction.ts","actions/index.ts","actions/waste.effect.ts","reducers/reducer_results.ts","reducers/reducer_favorites.ts","reducers/index.ts","store.ts","components/SearchBar.tsx","components/ResultsListItem.tsx","components/ResultsList.tsx","components/FavoritesList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["handleEveryMap","handleEveryAction","action","fn","regenerator_default","a","wrap","_context","prev","next","console","log","type","t0","group","error","groupEnd","stop","_marked","this","ADD_SEARCH_RESULT","LOAD_WASTE_REQUEST","CLEAR_WASTE_RESULTS","ADD_TO_FAVORITES","wasteRequest","input","payload","clearWasteResults","addToFavorites","waste","handlers","loadWaste","getWaste","axios","get","response","filtered","call","sent","data","filter","keywords","includes","put","waste_effect_marked","Object","defineProperty","objectSpread","initialState","rootReducer","combineReducers","wasteList","state","arguments","length","undefined","toConsumableArray","favoritesList","items","concat","rootSaga","sagaMiddleware","createSagaMiddleware","takeEvery","store_marked","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","StyledInputContainer","styled","div","_templateObject","StyledInput","_templateObject2","StyledButton","button","_templateObject3","StyledSearchIcon","IoIosSearch","_templateObject4","SearchBar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","term","onInputChange","bind","assertThisInitialized","onFormSubmit","event","currentTarget","value","setState","preventDefault","react_default","createElement","onSubmit","onChange","Component","connect","dispatch","bindActionCreators","StyledResult","ResultsListItem_templateObject","StyledStarIcon","IoIosStar","ResultsListItem_templateObject2","StyledFavoritedIcon","ResultsListItem_templateObject3","ResultTitle","ResultsListItem_templateObject4","ResultDesc","_templateObject5","ResultsListItem","decodeHTML","html","txt","document","innerHTML","handleFavoritesClick","_this2","decodedBody","body","favorite","title","onClick","dangerouslySetInnerHTML","__html","React","PureComponent","ownProps","ResultsList","map","components_ResultsListItem","key","renderList","Fragment","StyledFavoritesContainer","FavoritesList_templateObject","FavoritesTitle","FavoritesList_templateObject2","FavoritesList","AppContainer","App_templateObject","Header","header","App_templateObject2","Title","App_templateObject3","SearchListContainer","App_templateObject4","FavoritesContainer","App_templateObject5","App","components_SearchBar","components_ResultsList","components_FavoritesList","Boolean","location","hostname","match","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6JAMIA,sGASaC,GAAV,SAAUA,EAAkBC,GAA5B,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAF,EAAAC,KAAA,EAECE,QAAQC,IAAIT,KACNC,EAAKH,EAAeE,EAAOU,OAHlC,CAAAL,EAAAE,KAAA,QAKJ,OALIF,EAAAE,KAAA,EAKEN,EAAGD,GALL,OAAAK,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAQCG,QAAQI,MAAM,0BAA2BZ,EAAOU,MAChDF,QAAQK,MAAM,UAAdR,EAAAM,IACAH,QAAQC,IAAI,WAAYT,GACxBQ,QAAQM,WAXT,yBAAAT,EAAAU,SAAAC,EAAAC,KAAA,sCCdMC,EAAoB,wBACpBC,EAAqB,yBACrBC,EAAsB,kCACtBC,EAAmB,2BAOzB,SAASC,EAAaC,GACzB,MAAO,CACHb,KAAMS,EACNK,QAASD,GA4BV,SAASE,IACZ,MAAO,CACHf,KAAMU,GASP,SAASM,EAAeC,GAC3B,MAAO,CACHjB,KAAMW,EACNG,QAASG,ODhDcC,aEIrBC,GALJC,EAAW,WAEb,OAAOC,IAAMC,IADD,4EAIhB,SAAUH,EAAU7B,GAApB,IAAAiC,EAAAC,EAAA,OAAAhC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACqB,OADrBF,EAAAE,KAAA,EAC2B4B,YAAKL,GADhC,OAQI,OAPMG,EADV5B,EAAA+B,KAEUF,EAAWD,EAASI,KAAKC,OAAO,SAACX,GAEnC,GAAIA,EAAMY,SAASC,SAASxC,EAAOwB,SAC/B,OAAOG,IALnBtB,EAAAE,KAAA,EAQUkC,YDYC,CACH/B,KAAMQ,EACNM,QCduBU,IAR/B,wBAAA7B,EAAAU,SAAA2B,EAAAzB,MFJ+BW,EEehBe,OAAAC,EAAA,EAAAD,CAAA,GACVxB,EAAqBU,GFftB/B,EAAc6C,OAAAE,EAAA,EAAAF,CAAA,GACP7C,EACA8B,eGRLkB,EAA4B,GCA5BA,EAA4B,GCMnBC,EALKC,YAAgB,CAChCC,UFAW,WAAyF,IAAhFC,EAAgFC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxEL,EAAc9C,EAA0DmD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpG,OAAOrD,EAAOU,MACV,KAAKQ,EACD,OAAOyB,OAAAW,EAAA,EAAAX,CACA3C,EAAOwB,SAElB,KAAKJ,EACD,MAAO,GAEf,OAAO8B,GERPK,cDDW,WAA6D,IAApDL,EAAoDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5CL,EAAc9C,EAA8BmD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxE,OAAOrD,EAAOU,MACV,KAAKW,EACD,OAAI6B,EAAMV,SAASxC,EAAOwB,SACf0B,EAAMZ,OAAO,SAAAkB,GAAK,OAAIA,IAAUxD,EAAOwB,UAG9C,GAAAiC,OAAAd,OAAAW,EAAA,EAAAX,CACOO,GADP,CAEIlD,EAAOwB,UAIvB,OAAO0B,gBETDQ,GAFJC,EAAiBC,cAEvB,SAAUF,IAAV,OAAAxD,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACI,OADJF,EAAAE,KAAA,EACUsD,YAAU,kBAAM,GAAM9D,GADhC,wBAAAM,EAAAU,SAAA+C,EAAA7C,MAIA,IAAM8C,EAAoBC,OAAeC,sCAAwCC,IAG3EC,EAAQC,YACVrB,EAAagB,EACTM,YAAgBV,KAIxBA,EAAeW,IAAIZ,GAEJS,83BChBf,IAAMI,GAAuBC,IAAOC,IAAVC,KAQpBC,GAAcH,IAAOjD,MAAVqD,KASXC,GAAeL,IAAOM,OAAVC,KASZC,GAAmBR,YAAOS,IAAPT,CAAHU,KAmBhBC,eACF,SAAAA,EAAYC,GAAc,IAAAC,EAAA,OAAA1C,OAAA2C,EAAA,EAAA3C,CAAA1B,KAAAkE,IACtBE,EAAA1C,OAAA4C,EAAA,EAAA5C,CAAA1B,KAAA0B,OAAA6C,EAAA,EAAA7C,CAAAwC,GAAAhD,KAAAlB,KAAMmE,KACDlC,MAAQ,CAAEuC,KAAM,IACrBJ,EAAKK,cAAgBL,EAAKK,cAAcC,KAAnBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAA0C,KACrBA,EAAKQ,aAAeR,EAAKQ,aAAaF,KAAlBhD,OAAAiD,EAAA,EAAAjD,QAAAiD,EAAA,EAAAjD,CAAA0C,KAJEA,6EAMZS,GACwB,KAA9BA,EAAMC,cAAcC,OACpB/E,KAAKmE,MAAM3D,oBAEfR,KAAKgF,SAAS,CAACR,KAAMK,EAAMC,cAAcC,6CAEhCF,GACTA,EAAMI,iBACNjF,KAAKmE,MAAM9D,aAAaL,KAAKiC,MAAMuC,uCAGnC,OACIU,EAAAhG,EAAAiG,cAAA,QAAMC,SAAUpF,KAAK4E,cACjBM,EAAAhG,EAAAiG,cAAC7B,GAAD,KACI4B,EAAAhG,EAAAiG,cAACzB,GAAD,CACIqB,MAAO/E,KAAKiC,MAAMuC,KAClBa,SAAUrF,KAAKyE,gBAGnBS,EAAAhG,EAAAiG,cAACvB,GAAD,CAAcnE,KAAK,UACfyF,EAAAhG,EAAAiG,cAACpB,GAAD,gBA3BAuB,aAuCTC,eAAQ,KAJI,SAACC,GACxB,OAAOC,YAAmB,CAAEpF,eAAcG,qBAAqBgF,IAGpDD,CAAkCrB,gsBCrFjD,IAAMwB,GAAenC,IAAOC,IAAVmC,MAKZC,GAAiBrC,YAAOsC,IAAPtC,CAAHuC,MAOdC,GAAsBxC,YAAOsC,IAAPtC,CAAHyC,MAOnBC,GAAc1C,IAAOC,IAAV0C,MAMXC,GAAa5C,IAAOC,IAAV4C,MAqBVC,8MACFC,WAAa,SAACC,GACV,IAAMC,EAAMC,SAAStB,cAAc,YAEnC,OADAqB,EAAIE,UAAYH,EACTC,EAAIzB,SAEf4B,qBAAuB,SAACjG,GACpB0D,EAAKD,MAAM1D,eAAeC,4EAErB,IAAAkG,EAAA5G,KACGU,EAAUV,KAAKmE,MAAfzD,MACFmG,EAAc7G,KAAKsG,WAAW5F,EAAMoG,MAC1C,OAAI9G,KAAKmE,MAAM7B,cAAcjB,OAAO,SAAA0F,GAAQ,OAAIA,EAASC,QAAUtG,EAAMsG,QAAO7E,OAAS,EAEjF+C,EAAAhG,EAAAiG,cAACO,GAAD,KACIR,EAAAhG,EAAAiG,cAACY,GAAD,CAAqBkB,QAAS,kBAAML,EAAKD,qBAAqBjG,MAC9DwE,EAAAhG,EAAAiG,cAACc,GAAD,KAAcvF,EAAMsG,OACpB9B,EAAAhG,EAAAiG,cAACgB,GAAD,CAAYe,wBAA0B,CAACC,OAAM,GAAA3E,OAAKqE,OAK1D3B,EAAAhG,EAAAiG,cAACO,GAAD,KACIR,EAAAhG,EAAAiG,cAACS,GAAD,CAAgBqB,QAAS,kBAAML,EAAKD,qBAAqBjG,MACzDwE,EAAAhG,EAAAiG,cAACc,GAAD,KAAcvF,EAAMsG,OACpB9B,EAAAhG,EAAAiG,cAACgB,GAAD,CAAYe,wBAA0B,CAACC,OAAM,GAAA3E,OAAKqE,cAzBpCO,IAAMC,eAqCpC,IAIe9B,eAVf,SAAyBtD,GACrB,MAAO,CACHK,cAAeL,EAAMK,gBAIF,SAACkD,EAAoB8B,GAC5C,OAAO7B,YAAmB,CAAEhF,kBAAkB+E,IAGnCD,CAA6Cc,IClFtDkB,wLAEE,OAAOvH,KAAKmE,MAAMnC,UAAUwF,IAAI,SAAA9G,GAAK,OACjCwE,EAAAhG,EAAAiG,cAACsC,GAAD,CACIC,IAAKhH,EAAMsG,MACXtG,MAAOA,uCAKf,OAAKV,KAAKmE,MAAMnC,UAIZkD,EAAAhG,EAAAiG,cAAA,WACKnF,KAAK2H,cAJHzC,EAAAhG,EAAAiG,cAAAD,EAAAhG,EAAA0I,SAAA,aAXOtC,aA2BXC,mBANf,SAAyBtD,GACrB,MAAO,CACHD,UAAWC,EAAMD,YAIe,KAAzBuD,CAA+BgC,6RChC9C,IAAMM,GAA2BtE,IAAOC,IAAVsE,MAKxBC,GAAiBxE,IAAOC,IAAVwE,MAadC,wLAEE,OAAOjI,KAAKmE,MAAM7B,cAAckF,IAAI,SAAA9G,GAAK,OACrCwE,EAAAhG,EAAAiG,cAACsC,GAAD,CACIC,IAAKhH,EAAMsG,MACXtG,MAAOA,uCAKf,OAAwC,IAApCV,KAAKmE,MAAM7B,cAAcH,QAAiBnC,KAAKmE,MAAM7B,cAIrD4C,EAAAhG,EAAAiG,cAAC0C,GAAD,KACI3C,EAAAhG,EAAAiG,cAAC4C,GAAD,mBACC/H,KAAK2H,cALHzC,EAAAhG,EAAAiG,cAAAD,EAAAhG,EAAA0I,SAAA,aAXStC,aA4BbC,mBANf,SAAyBtD,GACrB,MAAO,CACHK,cAAeL,EAAMK,gBAIW,KAAzBiD,CAA+B0C,uuBC/C9C,IAAMC,GAAe3E,IAAOC,IAAV2E,MAOZC,GAAS7E,IAAO8E,OAAVC,MASNC,GAAQhF,IAAOC,IAAVgF,MAMLC,GAAsBlF,IAAOC,IAAVkF,MAInBC,GAAqBpF,IAAOC,IAAVoF,MAsBTC,oLAjBX,OACE3D,EAAAhG,EAAAiG,cAAC+C,GAAD,KACEhD,EAAAhG,EAAAiG,cAACiD,GAAD,KACIlD,EAAAhG,EAAAiG,cAACoD,GAAD,8BAEJrD,EAAAhG,EAAAiG,cAACsD,GAAD,KACIvD,EAAAhG,EAAAiG,cAAC2D,GAAD,MACA5D,EAAAhG,EAAAiG,cAAC4D,GAAD,OAEJ7D,EAAAhG,EAAAiG,cAACwD,GAAD,KACIzD,EAAAhG,EAAAiG,cAAC6D,GAAD,eAZM1D,aCvBE2D,QACW,cAA7BlG,OAAOmG,SAASC,UAEe,UAA7BpG,OAAOmG,SAASC,UAEhBpG,OAAOmG,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACLpE,EAAAhG,EAAAiG,cAACoE,EAAA,EAAD,CAAUrG,MAAOA,GACbgC,EAAAhG,EAAAiG,cAACqE,GAAD,OAEN/C,SAASgD,eAAe,SD6HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1c95e47c.chunk.js","sourcesContent":["import { Action } from 'redux';\r\n\r\ntype IHandleEvery = {\r\n    [key: string]: Function;\r\n};\r\n\r\nlet handleEveryMap: IHandleEvery;\r\n\r\nexport function addHandleEvery(handlers: IHandleEvery) {\r\n    handleEveryMap = {\r\n        ...handleEveryMap,\r\n        ...handlers,\r\n    }\r\n}\r\n\r\nexport function* handleEveryAction(action: Action) {\r\n    try {\r\n        console.log(action);\r\n        const fn = handleEveryMap[action.type];\r\n\t\tif (fn) {\r\n\t\t\tyield fn(action);\r\n\t\t}\r\n    } catch (e) {\r\n        console.group(\"Error handling action: \", action.type);\r\n        console.error(\"error: \", e);\r\n        console.log(\"action: \", action);\r\n        console.groupEnd();\r\n    }\r\n}\r\n","import { Action } from 'redux';\r\nexport const ADD_SEARCH_RESULT = 'Adding Search Results';\r\nexport const LOAD_WASTE_REQUEST = 'Request for Waste List';\r\nexport const CLEAR_WASTE_RESULTS = 'Clearing Results for Waste List';\r\nexport const ADD_TO_FAVORITES = 'Adding item to Favorites';\r\n\r\nexport type WasteRequestParams = {\r\n    type: typeof LOAD_WASTE_REQUEST;\r\n    payload: string;\r\n};\r\n\r\nexport function wasteRequest(input: string): WasteRequestParams {\r\n    return {\r\n        type: LOAD_WASTE_REQUEST,\r\n        payload: input\r\n    };\r\n}\r\n\r\nexport type WasteData = {\r\n    body: string;\r\n    category: string;\r\n    id?: string;\r\n    keywords: string;\r\n    title: string;\r\n};\r\n\r\nexport type AddSearchResultsParams = {\r\n    type: typeof ADD_SEARCH_RESULT;\r\n    payload: WasteData[];\r\n};\r\n\r\nexport function addSearchResults(wasteList: WasteData[]): AddSearchResultsParams {\r\n    return {\r\n        type: ADD_SEARCH_RESULT,\r\n        payload: wasteList\r\n    };\r\n}\r\n\r\nexport type ClearWasteResultsParams = {\r\n    type: typeof CLEAR_WASTE_RESULTS;\r\n}\r\n\r\nexport function clearWasteResults(): ClearWasteResultsParams {\r\n    return {\r\n        type: CLEAR_WASTE_RESULTS\r\n    }\r\n}\r\n\r\nexport type AddToFavoritesParams = {\r\n    type: typeof ADD_TO_FAVORITES;\r\n    payload: WasteData;\r\n}\r\n\r\nexport function addToFavorites(waste: WasteData): AddToFavoritesParams {\r\n    return {\r\n        type: ADD_TO_FAVORITES,\r\n        payload: waste\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport Action from 'redux';\r\nimport { call, put } from 'redux-saga/effects';\r\nimport { WasteRequestParams, AddSearchResultsParams, addSearchResults } from './index';\r\nimport { LOAD_WASTE_REQUEST, WasteData } from '../actions/index';\r\nimport { addHandleEvery } from '../handleEveryAction';\r\n\r\nconst getWaste = () => {\r\n    const url = 'https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000';\r\n    return axios.get(url);\r\n}\r\n\r\nfunction* loadWaste(action: WasteRequestParams) {\r\n    const response = yield call(getWaste);\r\n    const filtered = response.data.filter((waste: WasteData) => {\r\n        //const keywords = waste.keywords.replace(/[()]/g, '').split(/[ ,]+/);\r\n        if (waste.keywords.includes(action.payload)) {\r\n            return waste;\r\n        };\r\n    });\r\n    yield put(addSearchResults(filtered));\r\n}\r\n\r\naddHandleEvery({\r\n    [LOAD_WASTE_REQUEST]: loadWaste,\r\n});\r\n","import { ADD_SEARCH_RESULT, AddSearchResultsParams, WasteData, ClearWasteResultsParams, CLEAR_WASTE_RESULTS } from '../actions/index';\r\nimport { Action } from 'redux';\r\n\r\nconst initialState: WasteData[] = [];\r\n\r\nexport default function(state = initialState, action: AddSearchResultsParams | ClearWasteResultsParams) {\r\n    switch(action.type) {\r\n        case ADD_SEARCH_RESULT:\r\n            return [\r\n                ...action.payload\r\n            ];\r\n        case CLEAR_WASTE_RESULTS:\r\n            return [];\r\n    }\r\n    return state;\r\n}\r\n","import { ADD_TO_FAVORITES, WasteData, AddToFavoritesParams } from '../actions/index';\r\nimport { Action } from 'redux';\r\n\r\nconst initialState: WasteData[] = [];\r\n\r\nexport default function(state = initialState, action: AddToFavoritesParams) {\r\n    switch(action.type) {\r\n        case ADD_TO_FAVORITES:\r\n            if (state.includes(action.payload)) {\r\n                return state.filter(items => items !== action.payload);\r\n            }\r\n            else {\r\n                return [\r\n                    ...state,\r\n                    action.payload,\r\n                ];\r\n            }\r\n    }\r\n    return state;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport ResultReducer from './reducer_results';\r\nimport FavoriteReducer from './reducer_favorites';\r\n\r\nconst rootReducer = combineReducers({\r\n    wasteList: ResultReducer,\r\n    favoritesList: FavoriteReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { takeEvery } from 'redux-saga/effects';\r\nimport { handleEveryAction } from './handleEveryAction';\r\nimport './actions/waste.effect';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nfunction* rootSaga() {\r\n    yield takeEvery(() => true, handleEveryAction);\r\n}\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer, composeEnhancers(\r\n        applyMiddleware(sagaMiddleware)\r\n    )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { wasteRequest, clearWasteResults, WasteRequestParams, ClearWasteResultsParams } from '../actions/index';\r\nimport styled from 'styled-components';\r\nimport { IoIosSearch } from 'react-icons/io';\r\n\r\nconst StyledInputContainer = styled.div`\r\n    margin: 1em;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n    font-size: 0.9em;\r\n    padding: 0.8em 1.4em 0.8em 1.4em;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    border-radius: 2px;\r\n    border: 1px solid grey;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n    margin-left: 1em;\r\n    width: 4%;\r\n    height: 4em;\r\n    background-color: #1f824f;\r\n    border-radius: 2px;\r\n    border: none;\r\n`;\r\n\r\nconst StyledSearchIcon = styled(IoIosSearch)`\r\n    fill: white;\r\n    padding-top: 2px;\r\n    height: 2em;\r\n    width: 2em;\r\n    transform: scale(-2,2);\r\n`;\r\n\r\ntype DispatchProps = {\r\n    wasteRequest(input: string): WasteRequestParams;\r\n    clearWasteResults(): ClearWasteResultsParams;\r\n};\r\n\r\ntype State = {\r\n    term: string;\r\n};\r\n\r\ntype Props = DispatchProps;\r\n\r\nclass SearchBar extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = { term: '' };\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n        this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    }\r\n    onInputChange(event: React.FormEvent<HTMLInputElement>) {\r\n        if (event.currentTarget.value === '') {\r\n            this.props.clearWasteResults();\r\n        }\r\n        this.setState({term: event.currentTarget.value});\r\n    }\r\n    onFormSubmit(event: React.FormEvent) {\r\n        event.preventDefault();\r\n        this.props.wasteRequest(this.state.term);\r\n    }\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <StyledInputContainer>\r\n                    <StyledInput \r\n                        value={this.state.term}\r\n                        onChange={this.onInputChange}\r\n                    >\r\n                    </StyledInput>\r\n                    <StyledButton type=\"submit\">\r\n                        <StyledSearchIcon />\r\n                    </StyledButton>\r\n                </StyledInputContainer>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return bindActionCreators({ wasteRequest, clearWasteResults }, dispatch);\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchBar);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { WasteData, addToFavorites, AddToFavoritesParams } from '../actions/index';\r\nimport styled from 'styled-components';\r\nimport { IoIosStar } from 'react-icons/io';\r\n\r\nconst StyledResult = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst StyledStarIcon = styled(IoIosStar)`\r\n    fill: grey;\r\n    height: 1.2em;\r\n    width: 1.2em;\r\n    margin: 1em;\r\n`;\r\n\r\nconst StyledFavoritedIcon = styled(IoIosStar)`\r\n    fill: green;\r\n    height: 1.2em;\r\n    width: 1.2em;\r\n    margin: 1em;\r\n`;\r\n\r\nconst ResultTitle = styled.div`\r\n    margin-block-start: 1em;\r\n    margin-block-end: 1em;\r\n    width: 35%;\r\n`;\r\n\r\nconst ResultDesc = styled.div`\r\n    width: 65%;\r\n    li {\r\n        padding-bottom: 10px;\r\n    }\r\n`;\r\n\r\nexport type StateProps = {\r\n    favoritesList: WasteData[];\r\n}\r\n\r\nexport type DispatchProps = {\r\n    addToFavorites: (waste: WasteData) => void;\r\n}\r\n\r\nexport type OwnProps = {\r\n    waste: WasteData;\r\n};\r\n\r\ntype Props = OwnProps & DispatchProps & StateProps;\r\n\r\nclass ResultsListItem extends React.PureComponent<Props> {\r\n    decodeHTML = (html: string) => {\r\n        const txt = document.createElement('textarea');\r\n        txt.innerHTML = html;\r\n        return txt.value;\r\n    };\r\n    handleFavoritesClick = (waste: WasteData) =>{\r\n        this.props.addToFavorites(waste);\r\n    }\r\n    render() {\r\n        const { waste } = this.props;\r\n        const decodedBody = this.decodeHTML(waste.body);\r\n        if (this.props.favoritesList.filter(favorite => favorite.title === waste.title).length > 0) {\r\n            return (\r\n                <StyledResult>\r\n                    <StyledFavoritedIcon onClick={() => this.handleFavoritesClick(waste)} />\r\n                    <ResultTitle>{waste.title}</ResultTitle>\r\n                    <ResultDesc dangerouslySetInnerHTML={ {__html: `${decodedBody}`} } />\r\n                </StyledResult>\r\n            )\r\n        }\r\n        return (\r\n            <StyledResult>\r\n                <StyledStarIcon onClick={() => this.handleFavoritesClick(waste)} />\r\n                <ResultTitle>{waste.title}</ResultTitle>\r\n                <ResultDesc dangerouslySetInnerHTML={ {__html: `${decodedBody}`} } />\r\n            </StyledResult>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: StateProps) {\r\n    return {\r\n        favoritesList: state.favoritesList,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: OwnProps): DispatchProps => {\r\n    return bindActionCreators({ addToFavorites }, dispatch);\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsListItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { WasteData, addToFavorites } from '../actions/index';\r\nimport ResultsListItem from './ResultsListItem';\r\n\r\nexport type StateProps = {\r\n    wasteList: WasteData[];\r\n};\r\n\r\nexport type Props = StateProps;\r\n\r\nclass ResultsList extends Component<Props> {\r\n    renderList() {\r\n        return this.props.wasteList.map(waste => \r\n            <ResultsListItem \r\n                key={waste.title}\r\n                waste={waste}\r\n            /> \r\n        );\r\n    }\r\n    render() {\r\n        if (!this.props.wasteList) {\r\n            return <></>;\r\n        }\r\n        return(\r\n            <div>\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: StateProps) {\r\n    return {\r\n        wasteList: state.wasteList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ResultsList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport styled from 'styled-components';\r\nimport { WasteData, addToFavorites } from '../actions/index';\r\nimport ResultsListItem from './ResultsListItem';\r\n\r\nconst StyledFavoritesContainer = styled.div`\r\n    background-color: #f5fef9;\r\n    height: 100%;\r\n`;\r\n\r\nconst FavoritesTitle = styled.div`\r\n    font-weight: 700;\r\n    color: green;\r\n    font-size: 1.5em;\r\n    padding: 1em;\r\n`;\r\n\r\nexport type StateProps = {\r\n    favoritesList: WasteData[];\r\n};\r\n\r\nexport type Props = StateProps;\r\n\r\nclass FavoritesList extends Component<Props> {\r\n    renderList() {\r\n        return this.props.favoritesList.map(waste =>\r\n            <ResultsListItem\r\n                key={waste.title}\r\n                waste={waste}\r\n            />\r\n        );\r\n    }\r\n    render() {\r\n        if (this.props.favoritesList.length === 0 || !this.props.favoritesList) {\r\n            return <></>;\r\n        }\r\n        return(\r\n            <StyledFavoritesContainer>\r\n                <FavoritesTitle>Favourites</FavoritesTitle>\r\n                {this.renderList()}\r\n            </StyledFavoritesContainer>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: StateProps) {\r\n    return {\r\n        favoritesList: state.favoritesList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(FavoritesList);\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchBar from './components/SearchBar';\r\nimport ResultsList from './components/ResultsList';\r\nimport FavoritesList from './components/FavoritesList';\r\n\r\nconst AppContainer = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-image: linear-gradient(to right, #184680, #005a8b, #006b83, #00786c, #1f824f);\r\n    height: 15%;\r\n    width: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    display: flex;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    color: white;\r\n    font-size: 2.5em;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst SearchListContainer = styled.div`\r\n    flex: 1;\r\n`;\r\n\r\nconst FavoritesContainer = styled.div`\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <AppContainer>\r\n        <Header>\r\n            <Title>Toronto Waste Lookup</Title>\r\n        </Header>\r\n        <SearchListContainer>\r\n            <SearchBar />\r\n            <ResultsList />\r\n        </SearchListContainer>\r\n        <FavoritesContainer>\r\n            <FavoritesList />\r\n        </FavoritesContainer>\r\n      </AppContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './styles/main.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}