{"version":3,"sources":["handleEveryAction.ts","actions/index.ts","actions/waste.effect.ts","reducers/reducer_results.ts","reducers/reducer_favorites.ts","reducers/index.ts","store.ts","localStorage.ts","components/SearchBar.tsx","components/ResultsListItem.tsx","components/ResultsList.tsx","components/FavoritesList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["handleEveryMap","handleEveryAction","action","fn","regenerator_default","a","wrap","_context","prev","next","type","t0","console","group","error","log","groupEnd","stop","_marked","this","ADD_SEARCH_RESULT","LOAD_WASTE_REQUEST","CLEAR_WASTE_RESULTS","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","wasteRequest","input","payload","clearWasteResults","addToFavorites","waste","removeFromFavorites","wasteName","handlers","loadWaste","getWaste","axios","get","response","filtered","call","sent","data","filter","keywords","includes","put","waste_effect_marked","Object","defineProperty","objectSpread","initialState","rootReducer","combineReducers","wasteList","state","arguments","length","undefined","toConsumableArray","favoritesList","concat","items","title","rootSaga","sagaMiddleware","createSagaMiddleware","takeEvery","store_marked","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","applyMiddleware","subscribe","throttle","stringify","setItem","saveState","getState","run","StyledInputContainer","styled","div","_templateObject","StyledInput","_templateObject2","StyledButton","button","_templateObject3","StyledSearchIcon","IoIosSearch","_templateObject4","SearchBar","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","term","onInputChange","bind","assertThisInitialized","onFormSubmit","event","currentTarget","value","setState","preventDefault","toLowerCase","react_default","createElement","onSubmit","onChange","Component","connect","dispatch","bindActionCreators","StyledResult","ResultsListItem_templateObject","StyledStarIcon","IoIosStar","ResultsListItem_templateObject2","StyledFavoritedIcon","ResultsListItem_templateObject3","ResultTitle","ResultsListItem_templateObject4","ResultDesc","_templateObject5","ResultsListItem","decodeHTML","html","txt","document","innerHTML","handleFavoritesClick","handleRemoveFavoritesClick","_this2","decodedBody","body","favorite","onClick","dangerouslySetInnerHTML","__html","React","PureComponent","ownProps","ResultsList","map","components_ResultsListItem","key","renderList","Fragment","StyledFavoritesContainer","FavoritesList_templateObject","FavoritesTitle","FavoritesList_templateObject2","FavoritesList","AppContainer","App_templateObject","Header","header","App_templateObject2","Title","App_templateObject3","SearchListContainer","App_templateObject4","FavoritesContainer","App_templateObject5","App","components_SearchBar","components_ResultsList","components_FavoritesList","Boolean","location","hostname","match","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1980c608.chunk.js","sourcesContent":["import { Action } from 'redux';\n\ntype IHandleEvery = {\n    [key: string]: Function;\n};\n\nlet handleEveryMap: IHandleEvery;\n\nexport function addHandleEvery(handlers: IHandleEvery) {\n    handleEveryMap = {\n        ...handleEveryMap,\n        ...handlers,\n    }\n}\n\nexport function getHandleEvery(actionType: string): Function {\n\treturn handleEveryMap[actionType];\n}\n\nexport function* handleEveryAction(action: Action) {\n    try {\n        const fn = handleEveryMap[action.type];\n\t\tif (fn) {\n\t\t\tyield fn(action);\n\t\t}\n    } catch (e) {\n        console.group(\"Error handling action: \", action.type);\n        console.error(\"error: \", e);\n        console.log(\"action: \", action);\n        console.groupEnd();\n    }\n}\n","import { Action } from 'redux';\nexport const ADD_SEARCH_RESULT = 'Adding Search Results';\nexport const LOAD_WASTE_REQUEST = 'Request for Waste List';\nexport const CLEAR_WASTE_RESULTS = 'Clearing Results for Waste List';\nexport const ADD_TO_FAVORITES = 'Adding item to Favorites';\nexport const REMOVE_FROM_FAVORITES = 'Removing item from Favorites';\n\nexport type WasteRequestParams = {\n    type: typeof LOAD_WASTE_REQUEST;\n    payload: string;\n};\n\nexport function wasteRequest(input: string): WasteRequestParams {\n    return {\n        type: LOAD_WASTE_REQUEST,\n        payload: input\n    };\n}\n\nexport type WasteData = {\n    body: string;\n    category: string;\n    id?: string;\n    keywords: string;\n    title: string;\n};\n\nexport type AddSearchResultsParams = {\n    type: typeof ADD_SEARCH_RESULT;\n    payload: WasteData[];\n};\n\nexport function addSearchResults(wasteList: WasteData[]): AddSearchResultsParams {\n    return {\n        type: ADD_SEARCH_RESULT,\n        payload: wasteList\n    };\n}\n\nexport type ClearWasteResultsParams = {\n    type: typeof CLEAR_WASTE_RESULTS;\n}\n\nexport function clearWasteResults(): ClearWasteResultsParams {\n    return {\n        type: CLEAR_WASTE_RESULTS\n    }\n}\n\nexport type AddToFavoritesParams = {\n    type: typeof ADD_TO_FAVORITES;\n    payload: WasteData;\n}\n\nexport function addToFavorites(waste: WasteData): AddToFavoritesParams {\n    return {\n        type: ADD_TO_FAVORITES,\n        payload: waste\n    }\n}\n\nexport type RemoveFromFavoritesParams = {\n    type: typeof REMOVE_FROM_FAVORITES;\n    payload: string;\n}\n\nexport function removeFromFavorites(wasteName: string): RemoveFromFavoritesParams {\n    return {\n        type: REMOVE_FROM_FAVORITES,\n        payload: wasteName\n    }\n}","import axios from 'axios';\nimport Action from 'redux';\nimport { call, put } from 'redux-saga/effects';\nimport { WasteRequestParams, AddSearchResultsParams, addSearchResults } from './index';\nimport { LOAD_WASTE_REQUEST, WasteData } from '../actions/index';\nimport { addHandleEvery } from '../handleEveryAction';\n\nexport const getWaste = () => {\n    const url = 'https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000';\n    return axios.get(url);\n}\n\nfunction* loadWaste(action: WasteRequestParams) {\n    const response = yield call(getWaste);\n    const filtered = response.data.filter((waste: WasteData) => {\n        //const keywords = waste.keywords.replace(/[()]/g, '').split(/[ ,]+/);\n        if (waste.keywords.includes(action.payload)) {\n            return waste;\n        };\n    });\n    yield put(addSearchResults(filtered));\n}\n\naddHandleEvery({\n    [LOAD_WASTE_REQUEST]: loadWaste,\n});\n","import { ADD_SEARCH_RESULT, AddSearchResultsParams, WasteData, ClearWasteResultsParams, CLEAR_WASTE_RESULTS } from '../actions/index';\n\nconst initialState: WasteData[] = [];\n\nexport default function(state = initialState, action: AddSearchResultsParams | ClearWasteResultsParams) {\n    switch(action.type) {\n        case ADD_SEARCH_RESULT:\n            return [\n                ...action.payload\n            ];\n        case CLEAR_WASTE_RESULTS:\n            return [];\n    }\n    return state;\n}\n","import { ADD_TO_FAVORITES, WasteData, AddToFavoritesParams, REMOVE_FROM_FAVORITES, RemoveFromFavoritesParams } from '../actions/index';\n\nconst initialState: WasteData[] = [];\n\nexport default function(state = initialState, action: AddToFavoritesParams | RemoveFromFavoritesParams) {\n    switch(action.type) {\n        case ADD_TO_FAVORITES:\n            return [\n                ...state,\n                action.payload,\n            ];\n        case REMOVE_FROM_FAVORITES:\n            return state.filter(items => items.title !== action.payload);\n    }\n    return state;\n}\n","import { combineReducers } from 'redux';\nimport ResultReducer from './reducer_results';\nimport FavoriteReducer from './reducer_favorites';\n\nconst rootReducer = combineReducers({\n    wasteList: ResultReducer,\n    favoritesList: FavoriteReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { takeEvery } from 'redux-saga/effects';\nimport { handleEveryAction } from './handleEveryAction';\nimport './actions/waste.effect';\nimport rootReducer from './reducers/index';\nimport { loadState, saveState } from './localStorage';\nimport throttle from 'lodash/throttle';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nfunction* rootSaga() {\n    yield takeEvery(() => true, handleEveryAction);\n}\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst persistedState = loadState();\n\nconst store = createStore(\n    rootReducer,\n    persistedState,\n    composeEnhancers(\n        applyMiddleware(sagaMiddleware)\n    )\n);\n\nstore.subscribe(throttle(() => {\n    saveState({\n        wasteList: [],\n        favoritesList: store.getState().favoritesList\n    });\n}, 1000));\n\nsagaMiddleware.run(rootSaga)\n\nexport default store;\n","import rootReducer from './reducers/index';\nimport { WasteData } from './actions';\n\nexport const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\ntype State = {\n    wasteList: WasteData[];\n    favoritesList: WasteData[];\n}\n\nexport const saveState = (state: State) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch (err) {\n\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { bindActionCreators } from 'redux';\nimport { wasteRequest, clearWasteResults, WasteRequestParams, ClearWasteResultsParams } from '../actions/index';\nimport styled from 'styled-components';\nimport { IoIosSearch } from 'react-icons/io';\n\nconst StyledInputContainer = styled.div`\n    margin: 1em;\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n`;\n\nconst StyledInput = styled.input`\n    font-size: 0.9em;\n    padding: 0.8em 1.4em 0.8em 1.4em;\n    box-sizing: border-box;\n    width: 100%;\n    border-radius: 2px;\n    border: 1px solid grey;\n`;\n\nconst StyledButton = styled.button`\n    margin-left: 1em;\n    width: 6em;\n    height: 4em;\n    background-color: #1f824f;\n    border-radius: 2px;\n    border: none;\n`;\n\nconst StyledSearchIcon = styled(IoIosSearch)`\n    fill: white;\n    padding-top: 2px;\n    height: 2em;\n    width: 2em;\n    transform: scale(-2,2);\n`;\n\ntype DispatchProps = {\n    wasteRequest(input: string): WasteRequestParams;\n    clearWasteResults(): ClearWasteResultsParams;\n};\n\ntype State = {\n    term: string;\n};\n\ntype Props = DispatchProps;\n\nclass SearchBar extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { term: '' };\n        this.onInputChange = this.onInputChange.bind(this);\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n    onInputChange(event: React.FormEvent<HTMLInputElement>) {\n        if (event.currentTarget.value === '') {\n            this.props.clearWasteResults();\n        }\n        this.setState({term: event.currentTarget.value});\n    }\n    onFormSubmit(event: React.FormEvent) {\n        event.preventDefault();\n        this.props.wasteRequest(this.state.term.toLowerCase());\n    }\n    render(){\n        return(\n            <form onSubmit={this.onFormSubmit}>\n                <StyledInputContainer>\n                    <StyledInput\n                        value={this.state.term}\n                        onChange={this.onInputChange}\n                    >\n                    </StyledInput>\n                    <StyledButton type=\"submit\">\n                        <StyledSearchIcon />\n                    </StyledButton>\n                </StyledInputContainer>\n            </form>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return bindActionCreators({ wasteRequest, clearWasteResults }, dispatch);\n};\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport { WasteData, addToFavorites, removeFromFavorites } from '../actions/index';\nimport styled from 'styled-components';\nimport { IoIosStar } from 'react-icons/io';\n\nconst StyledResult = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n\nconst StyledStarIcon = styled(IoIosStar)`\n    fill: grey;\n    height: 1.2em;\n    width: 1.2em;\n    margin: 1em;\n`;\n\nconst StyledFavoritedIcon = styled(IoIosStar)`\n    fill: green;\n    height: 1.2em;\n    width: 1.2em;\n    margin: 1em;\n`;\n\nconst ResultTitle = styled.div`\n    margin-block-start: 1em;\n    margin-block-end: 1em;\n    width: 35%;\n`;\n\nconst ResultDesc = styled.div`\n    width: 65%;\n    li {\n        padding-bottom: 10px;\n    }\n`;\n\nexport type StateProps = {\n    favoritesList: WasteData[];\n}\n\nexport type DispatchProps = {\n    addToFavorites: (waste: WasteData) => void;\n    removeFromFavorites: (waste: string) => void;\n}\n\nexport type OwnProps = {\n    waste: WasteData;\n};\n\ntype Props = OwnProps & DispatchProps & StateProps;\n\nclass ResultsListItem extends React.PureComponent<Props> {\n    decodeHTML = (html: string) => {\n        const txt = document.createElement('textarea');\n        txt.innerHTML = html;\n        return txt.value;\n    };\n    handleFavoritesClick = (waste: WasteData) =>{\n        this.props.addToFavorites(waste);\n    }\n    handleRemoveFavoritesClick = (wasteName: string) => {\n        this.props.removeFromFavorites(wasteName);\n    }\n    render() {\n        const { waste } = this.props;\n        const decodedBody = this.decodeHTML(waste.body);\n        if (this.props.favoritesList.filter(favorite => favorite.title === waste.title).length > 0) {\n            return (\n                <StyledResult>\n                    <StyledFavoritedIcon onClick={() => this.handleRemoveFavoritesClick(waste.title)} />\n                    <ResultTitle>{waste.title}</ResultTitle>\n                    <ResultDesc dangerouslySetInnerHTML={ {__html: `${decodedBody}`} } />\n                </StyledResult>\n            )\n        }\n        return (\n            <StyledResult>\n                <StyledStarIcon onClick={() => this.handleFavoritesClick(waste)} />\n                <ResultTitle>{waste.title}</ResultTitle>\n                <ResultDesc dangerouslySetInnerHTML={ {__html: `${decodedBody}`} } />\n            </StyledResult>\n        );\n    }\n}\n\nfunction mapStateToProps(state: StateProps) {\n    return {\n        favoritesList: state.favoritesList,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: OwnProps): DispatchProps => {\n    return bindActionCreators({ addToFavorites, removeFromFavorites }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport { WasteData, addToFavorites } from '../actions/index';\nimport ResultsListItem from './ResultsListItem';\n\nexport type StateProps = {\n    wasteList: WasteData[];\n};\n\nexport type Props = StateProps;\n\nclass ResultsList extends Component<Props> {\n    renderList() {\n        return this.props.wasteList.map(waste => \n            <ResultsListItem \n                key={waste.title}\n                waste={waste}\n            /> \n        );\n    }\n    render() {\n        if (!this.props.wasteList) {\n            return <></>;\n        }\n        return(\n            <div>\n                {this.renderList()}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state: StateProps) {\n    return {\n        wasteList: state.wasteList,\n    }\n}\n\nexport default connect(mapStateToProps, null)(ResultsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport { WasteData, addToFavorites } from '../actions/index';\nimport ResultsListItem from './ResultsListItem';\n\nconst StyledFavoritesContainer = styled.div`\n    background-color: #f5fef9;\n    height: 100%;\n`;\n\nconst FavoritesTitle = styled.div`\n    font-weight: 700;\n    color: green;\n    font-size: 1.5em;\n    padding: 1em;\n`;\n\nexport type StateProps = {\n    favoritesList: WasteData[];\n};\n\nexport type Props = StateProps;\n\nclass FavoritesList extends Component<Props> {\n    renderList() {\n        return this.props.favoritesList.map(waste =>\n            <ResultsListItem\n                key={waste.title}\n                waste={waste}\n            />\n        );\n    }\n    render() {\n        if (this.props.favoritesList.length === 0 || !this.props.favoritesList) {\n            return <></>;\n        }\n        return(\n            <StyledFavoritesContainer>\n                <FavoritesTitle>Favourites</FavoritesTitle>\n                {this.renderList()}\n            </StyledFavoritesContainer>\n        );\n    }\n}\n\nfunction mapStateToProps(state: StateProps) {\n    return {\n        favoritesList: state.favoritesList,\n    }\n}\n\nexport default connect(mapStateToProps, null)(FavoritesList);\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport SearchBar from './components/SearchBar';\nimport ResultsList from './components/ResultsList';\nimport FavoritesList from './components/FavoritesList';\n\nconst AppContainer = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Header = styled.header`\n    background-image: linear-gradient(to right, #184680, #005a8b, #006b83, #00786c, #1f824f);\n    height: 15%;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    text-align: center;\n`;\n\nconst Title = styled.div`\n    color: white;\n    font-size: 2.5em;\n    font-weight: 700;\n`;\n\nconst SearchListContainer = styled.div`\n    flex: 1;\n`;\n\nconst FavoritesContainer = styled.div`\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <AppContainer>\n        <Header>\n            <Title>Toronto Waste Lookup</Title>\n        </Header>\n        <SearchListContainer>\n            <SearchBar />\n            <ResultsList />\n        </SearchListContainer>\n        <FavoritesContainer>\n            <FavoritesList />\n        </FavoritesContainer>\n      </AppContainer>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './styles/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}